"
A VSFTModelTest is a test class for testing the behavior of VSFTModel
"
Class {
	#name : #VSFTModelTest,
	#superclass : #TestCase,
	#instVars : [
		'm'
	],
	#category : #VisualizationSuchaiFuzzTesting
}

{ #category : #tests }
VSFTModelTest >> exampleJSON [
^ '[
  {
    "cmds": [
      {
        "cmd_name": "\u0002.f\u0006\u000bSLyf",
        "params": ""
      },
      {
        "cmd_name": "\u0005Hw_YP\u0015O\u0007",
        "params": ""
      },
      {
        "cmd_name": ";\u0013\bR",
        "params": ""
      },
      {
        "cmd_name": "\n-v\u00157=",
        "params": ""
      },
      {
        "cmd_name": "l-&05v\u0014<0 ",
        "params": ""
      }
    ],
    "exit code": 0,
    "total time (s)": 7.3006556034088135,
    "virtual memory (kb)": 444020.0,
    "real memory (kb)": 10608.0
  },
  {
    "cmds": [
      {
        "cmd_name": "Z\u0005;8\u001fUO<\u0011q",
        "params": ""
      },
      {
        "cmd_name": "jB\u0014",
        "params": ""
      },
      {
        "cmd_name": "\u001b\u0011xB$E",
        "params": ""
      },
      {
        "cmd_name": "Tu(cX\u0000\u0003",
        "params": ""
      },
      {
        "cmd_name": "*\u0015in}W",
        "params": ""
      }
    ],
    "exit code": 0,
    "total time (s)": 7.188375473022461,
    "virtual memory (kb)": 444020.0,
    "real memory (kb)": 10840.0
  },
  {
    "cmds": [
      {
        "cmd_name": "-Mx0Oquzg~",
        "params": ""
      },
      {
        "cmd_name": "*-\f?\u0005`\u0005\"",
        "params": ""
      },
      {
        "cmd_name": "^Df9",
        "params": ""
      },
      {
        "cmd_name": "\u0016ag\nv",
        "params": ""
      },
      {
        "cmd_name": "w\\9\n/Ui\u0019",
        "params": ""
      }
    ],
    "exit code": 0,
    "total time (s)": 6.992365598678589,
    "virtual memory (kb)": 444020.0,
    "real memory (kb)": 10852.0
  },
  {
    "cmds": [
      {
        "cmd_name": "\u001c0\u0019\u0014]",
        "params": ""
      },
      {
        "cmd_name": "m\f",
        "params": ""
      },
      {
        "cmd_name": "\u0019IV",
        "params": ""
      },
      {
        "cmd_name": "\b`yh\u0019@\u001d|",
        "params": ""
      },
      {
        "cmd_name": "",
        "params": ""
      }
    ],
    "exit code": 0,
    "total time (s)": 6.93543815612793,
    "virtual memory (kb)": 444020.0,
    "real memory (kb)": 10560.0
  },
  {
    "cmds": [
      {
        "cmd_name": "*J\n9\nD^/,",
        "params": ""
      },
      {
        "cmd_name": "Kk\u0001\u001bo*W",
        "params": ""
      },
      {
        "cmd_name": "",
        "params": ""
      },
      {
        "cmd_name": "g/5r\u0018=l|`",
        "params": ""
      },
      {
        "cmd_name": "QG\u0010f\u0010r\u001fUt",
        "params": ""
      }
    ],
    "exit code": 0,
    "total time (s)": 6.923550367355347,
    "virtual memory (kb)": 444020.0,
    "real memory (kb)": 10708.0
  },
  {
    "cmds": [
      {
        "cmd_name": "C",
        "params": ""
      },
      {
        "cmd_name": "\u001b",
        "params": ""
      },
      {
        "cmd_name": "aq\u001a",
        "params": ""
      },
      {
        "cmd_name": "\u001d6\u001c:6\u0011\u001d",
        "params": ""
      },
      {
        "cmd_name": "e",
        "params": ""
      }
    ],
    "exit code": 0,
    "total time (s)": 6.958289623260498,
    "virtual memory (kb)": 444020.0,
    "real memory (kb)": 10672.0
  },
  {
    "cmds": [
      {
        "cmd_name": "x\u0003gk5*r!",
        "params": ""
      },
      {
        "cmd_name": "",
        "params": ""
      },
      {
        "cmd_name": "wO\u0015y1",
        "params": ""
      },
      {
        "cmd_name": "\t^\r\r;]l",
        "params": ""
      },
      {
        "cmd_name": "3",
        "params": ""
      }
    ],
    "exit code": 0,
    "total time (s)": 6.982484340667725,
    "virtual memory (kb)": 444020.0,
    "real memory (kb)": 10688.0
  },
  {
    "cmds": [
      {
        "cmd_name": "V\u0003~M{\n,n",
        "params": ""
      },
      {
        "cmd_name": "`I",
        "params": ""
      },
      {
        "cmd_name": "Hp;nm",
        "params": ""
      },
      {
        "cmd_name": "f",
        "params": ""
      },
      {
        "cmd_name": "Z3d\u000e5",
        "params": ""
      }
    ],
    "exit code": 0,
    "total time (s)": 7.000272750854492,
    "virtual memory (kb)": 444020.0,
    "real memory (kb)": 10556.0
  },
  {
    "cmds": [
      {
        "cmd_name": "y",
        "params": ""
      },
      {
        "cmd_name": "]F''''\u0017nAu",
        "params": ""
      },
      {
        "cmd_name": "\u001a''''\u001cB",
        "params": ""
      },
      {
        "cmd_name": "_)\u0007/",
        "params": ""
      },
      {
        "cmd_name": "N;\u0002`\fj-q",
        "params": ""
      }
    ],
    "exit code": 0,
    "total time (s)": 6.909569978713989,
    "virtual memory (kb)": 444020.0,
    "real memory (kb)": 10904.0
  },
  {
    "cmds": [
      {
        "cmd_name": "JFTs",
        "params": ""
      },
      {
        "cmd_name": "l]I\u0013$\u001f\u0017\u00056",
        "params": ""
      },
      {
        "cmd_name": "{8",
        "params": ""
      },
      {
        "cmd_name": "Ti/\u0016\"Jp9",
        "params": ""
      },
      {
        "cmd_name": "A\u0003)L",
        "params": ""
      }
    ],
    "exit code": 0,
    "total time (s)": 6.9951159954071045,
    "virtual memory (kb)": 444020.0,
    "real memory (kb)": 11004.0
  }
]'
]

{ #category : #running }
VSFTModelTest >> setUp [
	super setUp.
	m := VSFTModel new
]

{ #category : #tests }
VSFTModelTest >> testEmpty [
	self assert: m name equals: 'UNNAMED'.
	self assert: m numberOfSequences equals: 0
]

{ #category : #tests }
VSFTModelTest >> testExample [

	m addJSONAsString: self exampleJSON.
	self assert: m numberOfSequences equals: 10.
	
	self assert: (m sequences allSatisfy: [ :s | s class == VSFTSequence ]).
	
	m sequences do: [ :s |
		self assert: s commands isCollection.
		self assert: (s commands allSatisfy: [ :c | c class == VSFTCommand ]).
		self assert: (s commands allSatisfy: [ :c | c model == m ]).
		 ]
	
]
